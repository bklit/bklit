{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///Users/matt/Desktop/tracker/src/lib/redis.ts"],"sourcesContent":["import Redis from \"ioredis\";\n\n// Initialize Redis client\n// Ensure your Redis server is running. By default, ioredis connects to 127.0.0.1:6379.\n// You can configure this using environment variables or a connection string if needed.\n// For example: new Redis(process.env.REDIS_URL)\n\nconst redis = new Redis(process.env.REDIS_URL || \"redis://127.0.0.1:6379\");\n\nredis.on(\"connect\", () => {\n  console.log(\"Connected to Redis\");\n});\n\nredis.on(\"error\", (err) => {\n  console.error(\"Redis connection error:\", err);\n});\n\nexport default redis;\n"],"names":[],"mappings":";;;AAAA;;AAEA,0BAA0B;AAC1B,uFAAuF;AACvF,uFAAuF;AACvF,gDAAgD;AAEhD,MAAM,QAAQ,IAAI,+LAAA,CAAA,UAAK,CAAC,QAAQ,GAAG,CAAC,SAAS,IAAI;AAEjD,MAAM,EAAE,CAAC,WAAW;IAClB,QAAQ,GAAG,CAAC;AACd;AAEA,MAAM,EAAE,CAAC,SAAS,CAAC;IACjB,QAAQ,KAAK,CAAC,2BAA2B;AAC3C;uCAEe","debugId":null}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file:///Users/matt/Desktop/tracker/src/app/api/track/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport redis from \"../../../lib/redis\"; // Adjusted import path\n\ninterface TrackingPayload {\n  url: string;\n  timestamp: string;\n  siteId: string; // Added siteId\n  // other potential fields\n}\n\n// Helper function to create a response with CORS headers\nfunction createCorsResponse(\n  body: Record<string, unknown> | { message: string; error?: string },\n  status: number\n) {\n  const response = NextResponse.json(body, { status });\n  response.headers.set(\"Access-Control-Allow-Origin\", \"*\"); // Allow all origins\n  response.headers.set(\"Access-Control-Allow-Methods\", \"POST, OPTIONS\");\n  response.headers.set(\"Access-Control-Allow-Headers\", \"Content-Type\");\n  return response;\n}\n\n// Handle OPTIONS requests for CORS preflight\nexport async function OPTIONS(_request: NextRequest) {\n  return createCorsResponse({ message: \"CORS preflight OK\" }, 200);\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const payload: TrackingPayload = await request.json();\n    console.log(\"Tracking data received:\", payload);\n\n    if (!payload.siteId) {\n      return createCorsResponse({ message: \"siteId is required\" }, 400);\n    }\n\n    // Store data in Redis, using siteId in the key\n    const redisKey = `events:${payload.siteId}`;\n    await redis.rpush(redisKey, JSON.stringify(payload)); // Store the whole payload\n    console.log(`Data pushed to Redis list: ${redisKey}`);\n\n    // We will add real-time updates (Socket.IO) here later.\n\n    return createCorsResponse({ message: \"Data received and stored\" }, 200);\n  } catch (error) {\n    console.error(\"Error processing tracking data:\", error);\n    // Check if the error is from Redis or JSON parsing etc.\n    let errorMessage = \"Error processing request\";\n    if (error instanceof Error) {\n      errorMessage = error.message;\n    }\n    return createCorsResponse(\n      { message: \"Error processing request\", error: errorMessage },\n      500\n    );\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;AACA,4MAAwC,uBAAuB;;;AAS/D,yDAAyD;AACzD,SAAS,mBACP,IAAmE,EACnE,MAAc;IAEd,MAAM,WAAW,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC,MAAM;QAAE;IAAO;IAClD,SAAS,OAAO,CAAC,GAAG,CAAC,+BAA+B,MAAM,oBAAoB;IAC9E,SAAS,OAAO,CAAC,GAAG,CAAC,gCAAgC;IACrD,SAAS,OAAO,CAAC,GAAG,CAAC,gCAAgC;IACrD,OAAO;AACT;AAGO,eAAe,QAAQ,QAAqB;IACjD,OAAO,mBAAmB;QAAE,SAAS;IAAoB,GAAG;AAC9D;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,UAA2B,MAAM,QAAQ,IAAI;QACnD,QAAQ,GAAG,CAAC,2BAA2B;QAEvC,IAAI,CAAC,QAAQ,MAAM,EAAE;YACnB,OAAO,mBAAmB;gBAAE,SAAS;YAAqB,GAAG;QAC/D;QAEA,+CAA+C;QAC/C,MAAM,WAAW,CAAC,OAAO,EAAE,QAAQ,MAAM,EAAE;QAC3C,MAAM,qHAAA,CAAA,UAAK,CAAC,KAAK,CAAC,UAAU,KAAK,SAAS,CAAC,WAAW,0BAA0B;QAChF,QAAQ,GAAG,CAAC,CAAC,2BAA2B,EAAE,UAAU;QAEpD,wDAAwD;QAExD,OAAO,mBAAmB;YAAE,SAAS;QAA2B,GAAG;IACrE,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mCAAmC;QACjD,wDAAwD;QACxD,IAAI,eAAe;QACnB,IAAI,iBAAiB,OAAO;YAC1B,eAAe,MAAM,OAAO;QAC9B;QACA,OAAO,mBACL;YAAE,SAAS;YAA4B,OAAO;QAAa,GAC3D;IAEJ;AACF","debugId":null}}]
}